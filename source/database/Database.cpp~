#include "Database.hpp"
#include "../singleton/Singleton.hpp"

#include <sqlite3.h>
#include <cstdio>

int database::Database::processResponse(void *NotUsed, int argc, char **argv, char **azColName) {
  int i;
  for(i = 0; i < argc; i++){
    std::printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL");
  }
  std::printf("\n");
  return 0;
}

void database::Database::launchQuery(std::string query) {
  std::string filepath = DEFAULT_FILE_PATH;

  // open sqlite3 db
  sqlite3* db;
  if (sqlite3_open(filepath.c_str(), &db)) {
    std::fprintf(stderr, "cannot open database '%s': %s\n", filepath.c_str(), sqlite3_errmsg(db));
    sqlite3_close(db);
  }

  // launch the query to sqlite3 library
  char* errorMessage = NULL;
  if (SQLITE_OK != sqlite3_exec(db, query.c_str(),
				database::Database::processResponse,
				0, &errorMessage)) {
    std::fprintf(stderr, "SQL error: %s\n", errorMessage);
    sqlite3_free(errorMessage);
  }
  std::printf("INFO: sql executed\n");

  sqlite3_close(db);
}
